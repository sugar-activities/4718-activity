#!/usr/bin/python
# -*- coding: utf-8 -*-

from sugar.activity import activity
import gtk
import sys
import os
import webkit

datadir = os.path.join(activity.get_activity_root(), "data", "BrowserData")
m1namefile = os.path.join(datadir, "M1Name")
m2namefile = os.path.join(datadir, "M2Name")
m3namefile = os.path.join(datadir, "M3Name")
m4namefile = os.path.join(datadir, "M4Name")
m5namefile = os.path.join(datadir, "M5Name")
m6namefile = os.path.join(datadir, "M6Name")
m7namefile = os.path.join(datadir, "M7Name")
m8namefile = os.path.join(datadir, "M8Name")
m9namefile = os.path.join(datadir, "M9Name")
m1url_file = os.path.join(datadir, "M1URL")
m2url_file = os.path.join(datadir, "M2URL")
m3url_file = os.path.join(datadir, "M3URL")
m4url_file = os.path.join(datadir, "M4URL")
m5url_file = os.path.join(datadir, "M5URL")
m6url_file = os.path.join(datadir, "M6URL")
m7url_file = os.path.join(datadir, "M7URL")
m8url_file = os.path.join(datadir, "M8URL")
m9url_file = os.path.join(datadir, "M9URL")
homepagefile = os.path.join(datadir, "HomePage")


if not os.path.exists(datadir):
    os.system("mkdir %s" % datadir)
    fd = open(m1namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m2namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m3namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m4namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m5namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m6namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m7namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m8namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m9namefile, "w")
    fd.write("")
    fd.close()
    fd = open(m1url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m2url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m3url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m4url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m5url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m6url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m7url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m8url_file, "w")
    fd.write("")
    fd.close()
    fd = open(m9url_file, "w")
    fd.write("")
    fd.close()
    fd = open(homepagefile, "w")
    fd.write("http://www.google.com/")
    fd.close()


class SurfingNow(activity.Activity):

    def __init__(self, handle):
        activity.Activity.__init__(self, handle)
        self.maincanvas = gtk.VBox()
        self.notebook = gtk.Notebook()
        self.baricon = gtk.ICON_SIZE_LARGE_TOOLBAR
        self.titlebar = gtk.HBox()
        self.browsertitle = gtk.Label("SurfingNow")
        self.ctlbar = gtk.HBox()
        self.ctlbarmainbuttons = gtk.HBox()
        self.ctlbarentrysection = gtk.HBox()
        self.ctlbarentry = gtk.Entry()
        self.ctlbarmore = gtk.ToolButton()
        self.ctlbarmoreimg = gtk.Image()
        self.ctlbarmoreimg.set_from_stock(gtk.STOCK_GO_DOWN, self.baricon)
        self.ctlbarmore.set_icon_widget(self.ctlbarmoreimg)
        self.ctlbarmore.set_tooltip_text("Acciones")
        self.ctlbarentrysection.pack_start(self.ctlbarentry)
        self.ctlbarentrysection.pack_end(self.ctlbarmore, False, False)
        self.go_back_button = gtk.ToolButton()
        self.go_back_button.set_tooltip_text("Atrás")
        self.go_back_img = gtk.Image()
        self.go_back_img.set_from_stock(gtk.STOCK_GO_BACK, self.baricon)
        self.go_back_button.set_icon_widget(self.go_back_img)
        self.go_forward_button = gtk.ToolButton()
        self.go_forward_button.set_tooltip_text("Adelante")
        self.go_forward_img = gtk.Image()
        self.go_forward_img.set_from_stock(gtk.STOCK_GO_FORWARD, self.baricon)
        self.go_forward_button.set_icon_widget(self.go_forward_img)
        self.reload_button = gtk.ToolButton()
        self.reload_button.set_tooltip_text("Recargar")
        self.reload_img = gtk.Image()
        self.reload_img.set_from_stock(gtk.STOCK_REFRESH, self.baricon)
        self.reload_button.set_icon_widget(self.reload_img)
        self.stop_load_button = gtk.ToolButton()
        self.stop_load_button.set_tooltip_text("Detener")
        self.stop_load_img = gtk.Image()
        self.stop_load_img.set_from_stock(gtk.STOCK_STOP, self.baricon)
        self.stop_load_button.set_icon_widget(self.stop_load_img)
        self.go_home_button = gtk.ToolButton()
        self.go_home_button.set_tooltip_text("Página de inicio")
        self.go_home_img = gtk.Image()
        self.go_home_img.set_from_stock(gtk.STOCK_HOME, self.baricon)
        self.go_home_button.set_icon_widget(self.go_home_img)
        self.ctlbarmainbuttons.add(self.go_back_button)
        self.ctlbarmainbuttons.add(self.go_forward_button)
        self.ctlbarmainbuttons.add(self.reload_button)
        self.ctlbarmainbuttons.add(self.stop_load_button)
        self.ctlbarmainbuttons.add(self.go_home_button)
        self.scroll = gtk.ScrolledWindow()
        self.browserbox = gtk.VBox()
        self.browser = webkit.WebView()
        self.scroll.add(self.browser)
        self.ctlbar.pack_start(self.ctlbarmainbuttons, False, False)
        self.ctlbar.pack_end(self.ctlbarentrysection)
        self.browserbox.pack_start(self.ctlbar, False, False)
        self.browserbox.pack_end(self.scroll)
        self.closeb = gtk.Button()
        self.closeimg = gtk.Image()
        self.closeimg.set_from_stock(gtk.STOCK_CLOSE, gtk.ICON_SIZE_BUTTON)
        self.closeb.set_image(self.closeimg)
        self.titlebar.pack_end(self.closeb, False, False)
        self.closeb.connect("clicked", self.quit_requested_cb, None)
        self.notebook.append_page(self.browserbox, self.browsertitle)
        self.maincanvas.pack_start(self.titlebar, False, False)
        self.maincanvas.pack_end(self.notebook)
        self.set_canvas(self.maincanvas)
        self.go_back_button.connect("clicked", self.go_back_cb, None)
        self.go_forward_button.connect("clicked", self.go_forward_cb, None)
        self.reload_button.connect("clicked", self.reload_cb, None)
        self.stop_load_button.connect("clicked", self.stop_cb, None)
        self.go_home_button.connect("clicked", self.go_home_cb, None)
        self.ctlbarmore.connect("clicked", self.actions_menu, None)
        self.ctlbarentry.connect("activate", self.enter_cb, None)
        self.browser.connect("populate-popup", self.make_menu)
        self.browser.connect("title-changed", self.titlechanged, None)
        self.browser.connect("load-started", self.load_started_cb, None)
        self.browser.connect("load-finished", self.load_finished_cb, None)
        self.browser.connect("load-progress-changed", self.updateprogress, None)
        self.browser.connect("create-web-view", self.new_window_requested, None)
        self.browser.connect("load-started", self.load_finished_cb, None)
        self.go_home_at_startup()
        self.show_all()

    def titlechanged(self, widget, event, title, data=None):
        self.set_title(title)
        self.change_status(title)
        if self.browser.get_property("uri") is None:
            self.ctlbarentry.set_text("")
        else:
            self.ctlbarentry.set_text(self.browser.get_property("uri"))

    def quit_requested_cb(self, widget, data=None):
        sys.exit(0)

    def quit_requested(self):
        sys.exit(0)

    def change_status(self, title):
        self.browsertitle.set_text(title)

    def load_started_cb(self, widget, event, data=None):
        if self.browser.get_property("uri") is None:
            self.ctlbarentry.set_text("")
        else:
            self.ctlbarentry.set_text(self.browser.get_property("uri"))
        self.change_status("Cargando...")

    def load_finished_cb(self, widget, event, data=None):
        if self.browser.get_property("title") is None:
            self.change_status("Sin título")
        else:
            self.change_status(self.browser.get_property("title"))
        if self.browser.get_property("uri") is None:
            self.ctlbarentry.set_text("")
        else:
            self.ctlbarentry.set_text(self.browser.get_property("uri"))

    def updateprogress(self, widget, gint, data=None):
        prog = self.browser.get_property("progress")
        self.ctlbarentry.set_progress_fraction(prog)

    def new_window_requested(self, widget, event, data=None):
        return self.browser

    def go_back_cb(self, widget, data=None):
        self.browser.go_back()

    def go_forward_cb(self, widget, data=None):
        self.browser.go_forward()

    def enter_cb(self, widget, data=None):
        if not self.ctlbarentry.get_text() == "":
            self.change_status("Cargando...")
            self.browser.load_uri(self.ctlbarentry.get_text())
            self.ctlbarentry.set_text(self.ctlbarentry.get_text())
        else:
            self.enter_null_page()

    def enter_null_page(self):
        self.browser.load_uri("")
        self.change_status("SurfingNow")
        self.ctlbarentry.set_text("Escribe aquí la dirección")

    def go_home_at_startup(self):
        fd = open(homepagefile, "r")
        page = fd.read()
        fd.close()
        if page == "":
            self.enter_null_page()
        else:
            self.browser.load_uri(page)
            self.ctlbarentry.set_text(page)

    def go_home_cb(self, widget, data=None):
        fd = open(homepagefile, "r")
        page = fd.read()
        fd.close()
        if page == "":
            self.enter_null_page()
        else:
            self.browser.load_uri(page)
            self.ctlbarentry.set_text(page)

    def reload_cb(self, widget, data=None):
        self.browser.reload()

    def stop_cb(self, widget, data=None):
        self.browser.stop_loading()

    def goto_fullscreen(self, widget, data=None):
        self.notebook.set_show_tabs(False)
        self.ctlbar.hide()
        self.titlebar.hide()

    def leave_fullscreen(self, widget, data=None):
        self.notebook.set_show_tabs(True)
        self.ctlbar.show()
        self.titlebar.show()

    def make_menu(self, widget, menu):
        leave_fullscreen = gtk.STOCK_LEAVE_FULLSCREEN
        self.surfingnow = gtk.ImageMenuItem("Página de inicio")
        self.snimage = gtk.Image()
        self.snimage.set_from_stock(gtk.STOCK_HOME, gtk.ICON_SIZE_MENU)
        self.surfingnow.set_image(self.snimage)
        self.surfingnow.connect("activate", self.go_home_cb, None)
        menu.append(self.surfingnow)
        self.surfingnow.show()
        self.fullscreen = gtk.ImageMenuItem("Pantalla completa")
        self.fsimage = gtk.Image()
        self.fsimage.set_from_stock(gtk.STOCK_FULLSCREEN, gtk.ICON_SIZE_MENU)
        self.fullscreen.set_image(self.fsimage)
        self.fullscreen.connect("activate", self.goto_fullscreen, None)
        menu.append(self.fullscreen)
        self.fullscreen.show()
        self.lfullscreen = gtk.ImageMenuItem("Salir de pantalla completa")
        self.lfsimage = gtk.Image()
        self.lfsimage.set_from_stock(leave_fullscreen, gtk.ICON_SIZE_MENU)
        self.lfullscreen.set_image(self.lfsimage)
        self.lfullscreen.connect("activate", self.leave_fullscreen, None)
        menu.append(self.lfullscreen)
        self.lfullscreen.show()

    def actions_menu(self, widget, data=None):
        self.actw = gtk.Window()
        self.actb = gtk.VBox()
        self.actmb = gtk.VBox()
        self.acttb = gtk.VBox()
        self.websearch = gtk.Button("Buscar en Internet")
        self.settings = gtk.Button("Preferencias")
        self.favbuttons = gtk.Button("Marcadores")
        self.actwintitle = gtk.Label()
        self.actwintitle.set_markup("<b><big><big>Acciones</big></big></b>")
        self.websearch.connect("clicked", self.searchweb, None)
        self.favbuttons.connect("clicked", self.bookmark, None)
        self.settings.connect("clicked", self.pref_start, None)
        self.actb.pack_start(self.websearch, False, False)
        self.actb.pack_start(self.settings, False, False)
        self.actb.pack_start(self.favbuttons, False, False)
        self.actmb.set_spacing(20)
        self.dialogimg = gtk.Image()
        self.dialogimg.set_from_file("activity/icon.svg")
        self.acttb.set_spacing(10)
        self.acttb.add(self.dialogimg)
        self.acttb.add(self.actwintitle)
        self.actmb.pack_start(self.acttb, False, False)
        self.actmb.pack_end(self.actb)
        self.actw.set_border_width(10)
        self.actw.set_default_size(300, 500)
        self.actw.set_title("Acciones - SurfingNow")
        self.actw.add(self.actmb)
        self.actw.show_all()

    def searchweb(self, widget, data=None):
        self.searchw = gtk.Window()
        self.searchb = gtk.VBox()
        self.searchmb = gtk.VBox()
        self.searchtb = gtk.VBox()
        self.seawintitle = gtk.Label()
        self.seawintitle.set_markup("<b><big><big>Buscar</big></big></b>")
        self.searchbox = gtk.Entry()
        self.searchbox.connect("activate", self.search_now, None)
        self.searchb.pack_start(self.searchbox, False, False)
        self.searchmb.set_spacing(20)
        self.searchimg = gtk.Image()
        self.searchimg.set_from_file("activity/icon.svg")
        self.searchtb.set_spacing(10)
        self.searchtb.add(self.searchimg)
        self.searchtb.add(self.seawintitle)
        self.searchmb.pack_start(self.searchtb, False, False)
        self.searchmb.pack_end(self.searchb)
        self.searchw.set_border_width(10)
        self.searchw.set_default_size(500, 0)
        self.searchw.set_title("Buscar con Google - SurfingNow")
        self.searchw.add(self.searchmb)
        self.searchw.show_all()

    def search_now(self, widget, data=None):
        tosearch = self.searchbox.get_text().replace(" ", "+")
        self.browser.load_uri("http://www.google.com/search?q=%s" % tosearch)

    def bookmark(self, widget, data=None):
        self.bookw = gtk.Window()
        self.bookb = gtk.VBox()
        self.bookmb = gtk.VBox()
        self.booktb = gtk.VBox()
        self.bm1box = gtk.HBox()
        self.bm2box = gtk.HBox()
        self.bm3box = gtk.HBox()
        self.bm4box = gtk.HBox()
        self.bm5box = gtk.HBox()
        self.bm6box = gtk.HBox()
        self.bm7box = gtk.HBox()
        self.bm8box = gtk.HBox()
        self.bm9box = gtk.HBox()
        self.bm1but = gtk.Button(open(m1namefile, "r").read())
        self.bm2but = gtk.Button(open(m2namefile, "r").read())
        self.bm3but = gtk.Button(open(m3namefile, "r").read())
        self.bm4but = gtk.Button(open(m4namefile, "r").read())
        self.bm5but = gtk.Button(open(m5namefile, "r").read())
        self.bm6but = gtk.Button(open(m6namefile, "r").read())
        self.bm7but = gtk.Button(open(m7namefile, "r").read())
        self.bm8but = gtk.Button(open(m8namefile, "r").read())
        self.bm9but = gtk.Button(open(m9namefile, "r").read())
        self.bm1edi = gtk.Button(">")
        self.bm2edi = gtk.Button(">")
        self.bm3edi = gtk.Button(">")
        self.bm4edi = gtk.Button(">")
        self.bm5edi = gtk.Button(">")
        self.bm6edi = gtk.Button(">")
        self.bm7edi = gtk.Button(">")
        self.bm8edi = gtk.Button(">")
        self.bm9edi = gtk.Button(">")
        self.booktitle = gtk.Label()
        self.booktitle.set_markup("<b><big><big>Marcadores</big></big></b>")
        self.bm1box.pack_start(self.bm1but)
        self.bm1box.pack_end(self.bm1edi, False, False)
        self.bm2box.pack_start(self.bm2but)
        self.bm2box.pack_end(self.bm2edi, False, False)
        self.bm3box.pack_start(self.bm3but)
        self.bm3box.pack_end(self.bm3edi, False, False)
        self.bm4box.pack_start(self.bm4but)
        self.bm4box.pack_end(self.bm4edi, False, False)
        self.bm5box.pack_start(self.bm5but)
        self.bm5box.pack_end(self.bm5edi, False, False)
        self.bm6box.pack_start(self.bm6but)
        self.bm6box.pack_end(self.bm6edi, False, False)
        self.bm7box.pack_start(self.bm7but)
        self.bm7box.pack_end(self.bm7edi, False, False)
        self.bm8box.pack_start(self.bm8but)
        self.bm8box.pack_end(self.bm8edi, False, False)
        self.bm9box.pack_start(self.bm9but)
        self.bm9box.pack_end(self.bm9edi, False, False)
        self.bookb.pack_start(self.bm1box, False, False)
        self.bookb.pack_start(self.bm2box, False, False)
        self.bookb.pack_start(self.bm3box, False, False)
        self.bookb.pack_start(self.bm4box, False, False)
        self.bookb.pack_start(self.bm5box, False, False)
        self.bookb.pack_start(self.bm6box, False, False)
        self.bookb.pack_start(self.bm7box, False, False)
        self.bookb.pack_start(self.bm8box, False, False)
        self.bookb.pack_start(self.bm9box, False, False)
        self.bm1but.connect("clicked", self.enter_bookmark, "1")
        self.bm2but.connect("clicked", self.enter_bookmark, "2")
        self.bm3but.connect("clicked", self.enter_bookmark, "3")
        self.bm4but.connect("clicked", self.enter_bookmark, "4")
        self.bm5but.connect("clicked", self.enter_bookmark, "5")
        self.bm6but.connect("clicked", self.enter_bookmark, "6")
        self.bm7but.connect("clicked", self.enter_bookmark, "7")
        self.bm8but.connect("clicked", self.enter_bookmark, "8")
        self.bm9but.connect("clicked", self.enter_bookmark, "9")
        self.bm1edi.connect("clicked", self.configure_bm, "1")
        self.bm2edi.connect("clicked", self.configure_bm, "2")
        self.bm3edi.connect("clicked", self.configure_bm, "3")
        self.bm4edi.connect("clicked", self.configure_bm, "4")
        self.bm5edi.connect("clicked", self.configure_bm, "5")
        self.bm6edi.connect("clicked", self.configure_bm, "6")
        self.bm7edi.connect("clicked", self.configure_bm, "7")
        self.bm8edi.connect("clicked", self.configure_bm, "8")
        self.bm9edi.connect("clicked", self.configure_bm, "9")
        self.bookmb.set_spacing(20)
        self.bookimg = gtk.Image()
        self.bookimg.set_from_file("activity/icon.svg")
        self.booktb.set_spacing(10)
        self.booktb.add(self.bookimg)
        self.booktb.add(self.booktitle)
        self.bookmb.pack_start(self.booktb, False, False)
        self.bookmb.pack_end(self.bookb)
        self.bookw.set_border_width(10)
        self.bookw.set_default_size(300, 500)
        self.bookw.set_title("Marcadores - SurfingNow")
        self.bookw.add(self.bookmb)
        self.bookw.show_all()

    def enter_bookmark(self, widget, data):
        fd = open(os.path.join(datadir, "M%sURL" % data), "r")
        finalpage = fd.read()
        fd.close()
        self.browser.load_uri(finalpage)

    def configure_bm(self, widget, data):
        urlfile = os.path.join(datadir, "M%sURL" % data)
        namefile = os.path.join(datadir, "M%sName" % data)
        self.bmconfw = gtk.Window()
        self.bmconfb = gtk.VBox()
        self.urllabel = gtk.Label()
        self.urllabel.set_markup("<b>URL:</b>")
        self.titlelabel = gtk.Label()
        self.titlelabel.set_markup("<b>Título:</b>")
        self.urlentry = gtk.Entry()
        self.urlentry.set_text(open(urlfile, "r").read())
        self.urlentry.connect("changed", self.bm_url_changed, data)
        self.nameentry = gtk.Entry()
        self.nameentry.set_text(open(namefile, "r").read())
        self.nameentry.connect("changed", self.bm_name_changed, data)
        self.bmconfb.add(self.titlelabel)
        self.bmconfb.add(self.nameentry)
        self.bmconfb.add(self.urllabel)
        self.bmconfb.add(self.urlentry)
        self.bmconfw.add(self.bmconfb)
        self.bmconfw.set_title("Configurando marcador %s" % data)
        self.bmconfw.set_border_width(10)
        self.bmconfw.show_all()

    def bm_name_changed(self, widget, data):
        namefile = os.path.join(datadir, "M%sName" % data)
        fd = open(namefile, "w")
        fd.write(self.nameentry.get_text())
        fd.close()

    def bm_url_changed(self, widget, data):
        namefile = os.path.join(datadir, "M%sURL" % data)
        fd = open(namefile, "w")
        fd.write(self.urlentry.get_text())
        fd.close()

    def update_hp(self, widget, data=None):
        fd = open(homepagefile, "w")
        fd.write(self.hpentry.get_text())
        fd.close()

    def pref_start(self, widget, data=None):
        self.prefw = gtk.Window()
        self.prefb = gtk.VBox()
        self.prefmb = gtk.VBox()
        self.preftb = gtk.VBox()
        self.hplabel = gtk.Label()
        self.hplabel.set_markup("<b>Página de inicio:</b>")
        self.hpentry = gtk.Entry()
        self.hpentry.set_text(open(homepagefile, "r").read())
        self.preftitle = gtk.Label()
        self.preftitle.set_markup("<b><big><big>Preferencias</big></big></b>")
        self.hpentry.connect("changed", self.update_hp, None)
        self.prefb.add(self.hplabel)
        self.prefb.add(self.hpentry)
        self.prefmb.set_spacing(20)
        self.prefimg = gtk.Image()
        self.prefimg.set_from_file("activity/icon.svg")
        self.preftb.set_spacing(10)
        self.preftb.add(self.prefimg)
        self.preftb.add(self.preftitle)
        self.prefmb.pack_start(self.preftb, False, False)
        self.prefmb.pack_end(self.prefb)
        self.prefw.set_border_width(10)
        self.prefw.set_default_size(300, 0)
        self.prefw.set_title("Preferencias - SurfingNow")
        self.prefw.add(self.prefmb)
        self.prefw.show_all()
